name: Deploy React Portfolio

on:
  push:
    branches: [ main, dev ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      DEPLOY_ENV: ${{ github.event.inputs.environment || (github.ref == 'refs/heads/main' && 'production') || 'staging' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Build project
        run: npm run build

      - name: Set deployment secrets dynamically
        id: set-secrets
        run: |
          if [ "${{ env.DEPLOY_ENV }}" = "production" ]; then
            echo "HOST=${{ secrets.REMOTE_HOST }}" >> $GITHUB_ENV
            echo "USER=${{ secrets.REMOTE_USER }}" >> $GITHUB_ENV
            echo "PATH=${{ secrets.REMOTE_PATH }}" >> $GITHUB_ENV
          else
            echo "HOST=${{ secrets.REMOTE_HOST_STAGING }}" >> $GITHUB_ENV
            echo "USER=${{ secrets.REMOTE_USER_STAGING }}" >> $GITHUB_ENV
            echo "PATH=${{ secrets.REMOTE_PATH_STAGING }}" >> $GITHUB_ENV
          fi

          - name: Setup SSH manually
          run: |
            eval "$(ssh-agent -s)"
            mkdir -p ~/.ssh
            echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
            chmod 600 ~/.ssh/id_rsa
            ssh-add ~/.ssh/id_rsa
            ssh-keyscan -H "$HOST" >> ~/.ssh/known_hosts

      - name: Deploy via rsync
        run: |
          rsync -avz --delete dist/ $USER@$HOST:$PATH
          echo "Deployed to $DEPLOY_ENV environment"

      - name: Notify deployment status
        run: |
          echo "Deployment completed successfully!"
          echo "Deployed to: $DEPLOY_ENV"
